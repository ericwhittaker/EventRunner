{
  "name": "eventrunner",
  "productName": "EventRunner",
  "description": "Event Management Software",
  "version": "0.7.11",
  "main": "main.js",
  "author": "Eric Whittaker",
  "license": "MIT",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test",
    "electronstart": "electron-forge start",
    "electrontest": "echo \"Error: no test specified\" && exit 1",
    "electronpackage": "electron-forge package",
    "electronmake": "electron-forge make",
    "electronpublish": "electron-forge publish",
    "postversion": "git push && git push --tags",
    "release": "npm run build && electron-forge publish",
    "update-version-file": "node -e \"const fs = require('fs'); const pkg = require('./package.json'); fs.writeFileSync('./src/app/version.ts', '// This file is auto-generated during build\\nexport const APP_VERSION = \\'' + pkg.version + '\\';\\n');\"",
    "update-version-file-patch": "node -e \"const fs = require('fs'); const pkg = require('./package.json'); const v = pkg.version.split('.'); const newVer = v[0] + '.' + v[1] + '.' + (parseInt(v[2]) + 1); fs.writeFileSync('./src/app/version.ts', '// This file is auto-generated during build\\nexport const APP_VERSION = \\'' + newVer + '\\';\\n');\"",
    "update-version-file-minor": "node -e \"const fs = require('fs'); const pkg = require('./package.json'); const v = pkg.version.split('.'); const newVer = v[0] + '.' + (parseInt(v[1]) + 1) + '.0'; fs.writeFileSync('./src/app/version.ts', '// This file is auto-generated during build\\nexport const APP_VERSION = \\'' + newVer + '\\';\\n');\"",
    "update-version-file-major": "node -e \"const fs = require('fs'); const pkg = require('./package.json'); const v = pkg.version.split('.'); const newVer = (parseInt(v[0]) + 1) + '.0.0'; fs.writeFileSync('./src/app/version.ts', '// This file is auto-generated during build\\nexport const APP_VERSION = \\'' + newVer + '\\';\\n');\"",
    "er-releasepatch": "npm run update-version-file-patch && git add . && git commit -m \"Update version file for patch release\" && npm version patch && npm run release",
    "er-releaseminor": "npm run update-version-file-minor && git add . && git commit -m \"Update version file for minor release\" && npm version minor && npm run release",
    "er-releasemajor": "npm run update-version-file-major && git add . && git commit -m \"Update version file for major release\" && npm version major && npm run release"
  },
  "prettier": {
    "overrides": [
      {
        "files": "*.html",
        "options": {
          "parser": "angular"
        }
      }
    ]
  },
  "private": true,
  "dependencies": {
    "@angular/common": "^20.1.1",
    "@angular/compiler": "^20.1.1",
    "@angular/core": "^20.1.1",
    "@angular/forms": "^20.1.1",
    "@angular/platform-browser": "^20.1.1",
    "@angular/router": "^20.1.1",
    "electron-log": "^5.4.1",
    "electron-squirrel-startup": "^1.0.1",
    "electron-updater": "^6.6.2",
    "firebase": "^11.10.0",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "update-electron-app": "^3.1.1"
  },
  "devDependencies": {
    "@angular/build": "^20.1.1",
    "@angular/cli": "^20.1.1",
    "@angular/compiler-cli": "^20.1.1",
    "@electron-forge/cli": "^7.8.1",
    "@electron-forge/maker-deb": "^7.8.1",
    "@electron-forge/maker-rpm": "^7.8.1",
    "@electron-forge/maker-squirrel": "^7.8.1",
    "@electron-forge/maker-zip": "^7.8.1",
    "@electron-forge/plugin-auto-unpack-natives": "^7.8.1",
    "@electron-forge/plugin-fuses": "^7.8.1",
    "@electron-forge/publisher-github": "^7.8.1",
    "@electron/fuses": "^1.8.0",
    "@electron/notarize": "^3.0.1",
    "@electron/osx-sign": "^2.0.0",
    "@types/jasmine": "~5.1.0",
    "electron": "^37.2.1",
    "jasmine-core": "~5.8.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "typescript": "~5.8.2"
  }
}
